require("dotenv").config()
const replyKeyboard = require("./keyboards/replyKeyboard")
const {Scenes: {Stage}} = require("telegraf");
const utils = require("./utils");
const { Customer, Branch, Admins } = require("./models/model");

var requireScenes = require("require-all")({
  dirname: __dirname + "/scenes",
  recursive: false,
});


var scenes = [];
Object.keys(requireScenes).map((v) => scenes.push(requireScenes[v]));


const stage = new Stage(scenes);


stage.hears("üòä –ü–æ–±–æ–ª—Ç–∞–µ–º? (üì±–∫–æ–Ω—Ç–∞–∫—Ç—ã, –µ—Å–ª–∏ –∫—Ç–æ –Ω–µ –ø–æ–Ω—è–ª)", async ctx => {
  await ctx.reply("\n–§–∏–ª–∏–∞–ª: –†–µ—Å—Ç–æ—Ä–∞–Ω HALVA.\n–ê–¥—Ä–µ—Å: –≥.–¢–∞—à–∫–µ–Ω—Ç, —É–ª.–õ–∞–±–∑–∞–∫, –ü–∞—Ä–∫ \"–ù–∞–≤—Ä—É–∑\"\n–û—Ä–∏–µ–Ω—Ç–∏—Ä: (–æ—Ä–∏–µ–Ω—Ç–∏—Ä \"–ê–Ω—Ö–æ—Ä –õ–æ–∫–æ–º–æ—Ç–∏–≤\").\n–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n@halva_artcafe_shop\n+998946160016\n+998977654568\n\n–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å 11:00 –¥–æ 23:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n\n–í–æ—Ç —Ç–æ –º–µ—Å—Ç–æ ‚Äî N 41.325886 E 69.266108.\n–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ –Ø–Ω–¥–µ–∫—Å.–ù–∞–≤–∏–≥–∞—Ç–æ—Ä–µ:  https://yandex.ru/navi/?whatshere[point]=69.266108,41.325886&whatshere[zoom]=18&lang=ru&from=navi", await replyKeyboard.chooseFillial())
  context = await replyKeyboard.back()
  context.parse_mode = 'HTML'
  await ctx.reply("&#8288;", context)
})

stage.hears("üòá –û—Å—Ç–∞–≤–∏–º –æ—Ç–∑—ã–≤?", async (ctx) => {
  await ctx.scene.leave()
  await ctx.reply("‚ÑπÔ∏è–í—ã –º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–µ", await replyKeyboard.back())
  await ctx.scene.enter("review_scene") 
})

stage.hears("üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", async ctx => {
  await ctx.scene.leave()
  await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –û—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑ –≤–º–µ—Å—Ç–µ? üòÉ", await replyKeyboard.mainMenu() )
  return ctx.scene.enter("choosing_food_scene")
})

stage.hears("üöñ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", async ctx => {
  try {
    await ctx.scene.leave()
    let cart = await utils.getCartInfo(ctx.message.from.id)
    if(cart !== null) {
      let cartDishes = cart.cart_dishes
    
      if(cartDishes.length > 0) {
        await ctx.scene.leave()
        await ctx.scene.enter("order")
      } else {
        await ctx.scene.leave()
        await ctx.reply("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", await replyKeyboard.mainMenu())
        await ctx.scene.enter("choosing_food_scene")
      }
    } else {
      await ctx.scene.leave()
      await ctx.reply("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", await replyKeyboard.mainMenu())
      await ctx.scene.enter("choosing_food_scene")
    }
  } catch(e) {
    await utils.sendError(ctx, e)
  }
})

stage.start( async ctx => {
  await ctx.scene.leave()
  let res = await Customer.findOne({where: {user_id: ctx.message.from.id}})
  if(res === null) {
      await Customer.create({
          user_id: ctx.message.from.id
      })
  }
  await ctx.reply("‚Ñπ–û—Ç–ª–∏—á–Ω–æ! –û—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑ –≤–º–µ—Å—Ç–µ? üòÉ", await replyKeyboard.mainMenu())
  await ctx.scene.enter("choosing_food_scene")
})

stage.command("admin", async ctx => {
  const isAdmin = await utils.userIsAdmin(ctx.message.from.id)
  if(isAdmin == true) {
      await ctx.scene.leave()
      await ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: ", await replyKeyboard.adminPanel())
  }
})

stage.on('pre_checkout_query', async (ctx) => {
  await ctx.answerPreCheckoutQuery(true)
})

stage.on('successful_payment', async (ctx) => {
  const orderId = JSON.parse(ctx.message.successful_payment.invoice_payload).unique_id.split("_")[1]
  await ctx.reply(`–í–∞—à –∑–∞–∫–∞–∑ #${order.id} –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n–°–µ–π—á–∞—Å –í–∞–º –ø–æ–∑–≤–æ–Ω–∏—Ç –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä.`)
  await ctx.telegram.sendMessage(process.env.GROUP_ID, `
  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${ctx.message.from.username} —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª –∑–∞–∫–∞–∑ ‚Ññ${orderId}
`)
  await setTimeout( async () => {
    await ctx.scene.leave()
    await ctx.reply("–ö–∞–∫ –≤–∞–º –±–ª—é–¥–æ? –¢–∞–∫–∂–µ –ø—Ä–æ—Å–∏–º –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ", await replyKeyboard.back())
    await ctx.scene.enter("review_scene") 
  }, 7200000)
  await ctx.scene.enter("choosing_food_scene")

})

stage.action(/^confirm:(\d+)$/, async ctx => {
  const data = ctx.match[1].split("_")
  console.log(ctx)
  const orderId = parseInt(data[0])
  const userId = parseInt(data[1])
  ctx.telegram.sendMessage(userId, `<b>–ú—ã –Ω–∞—á–∞–ª–∏ –≥–æ—Ç–æ–≤–∏—Ç—å –í–∞—à –∑–∞–∫–∞–∑.\n–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 50 –º–∏–Ω—É—Ç.–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–∫–∞–∑!üòä</b>`, {parse_mode: "HTML"})

})

// stage.hears("üîé –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", async ctx => {
//   await ctx.scene.leave()
//   await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")
//   await ctx.scene.enter("choose_dish_by_name")
// })

// stage.hears("üì• –ö–æ—Ä–∑–∏–Ω–∞", async ctx => {
//   await ctx.scene.leave()
//   let cart = await utils.getCartInfo(ctx.message.from.id)

//   if(cart !== null) {
//     let cartDishes = cart.cart_dishes
//     const text = await utils.getCartText(cartDishes)
//     if(cartDishes.length > 0) {
//       context = replyKeyboard.keyboardForCart(cartDishes)
//       context.parse_mode = "HTML"
//       await ctx.reply(text, context)
//     } else {
//       await ctx.scene.leave()
//       await ctx.reply(text, replyKeyboard.mainMenu())
//       await ctx.scene.enter("choosing_food_scene")
//     }
//   } else {
//     await ctx.scene.leave()
//     await ctx.reply("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", replyKeyboard.mainMenu())
//     await ctx.scene.enter("choosing_food_scene")
//   }
// })

module.exports = {stage}
