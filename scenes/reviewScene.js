require("dotenv").config()
const {Telegraf, Scenes: {WizardScene, Stage}} = require("telegraf")
const replyKeyboard = require("../keyboards/replyKeyboard")
const {Customer} = require("../models/model")

const reviewScene = new WizardScene("review_scene",
    async ctx => {
        await ctx.reply("‚ÑπÔ∏è–í—ã –º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–µ", await replyKeyboard.back())
        return ctx.wizard.next()
    },

    async ctx => {
        const txt = ctx.message.text
        if(txt !== "‚¨ÖÔ∏è –Ω–∞–∑–∞–¥") {
            if(txt > 5) {
                await ctx.scene.leave()
                await ctx.telegram.sendMessage(process.env.GROUP_ID,`–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ ${ moment(new Date()).format("DD.MM.YYYY hh:mm:ss")}
–¢–µ–∫—Å—Ç: ${text}
üë§–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.message.from.username} <a href="tg://user?id=${ctx.message.from.id}">–°—Å—ã–ª–∫–∞</a>
`, {parse_mode: "HTML"})
                await ctx.reply("–û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                await ctx.scene.enter("choosing_food_scene")
            } else {
                await ctx.reply("–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            }

        } else {
            await ctx.scene.leave()
            // await ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –û—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑ –≤–º–µ—Å—Ç–µ? üòÉ", await replyKeyboard.mainMenu() )
            return ctx.scene.enter("choosing_food_scene")
        }
    }
    
)

module.exports = reviewScene